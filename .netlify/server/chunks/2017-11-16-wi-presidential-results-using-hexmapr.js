import "clsx";
import { h as html } from "./html.js";
const metadata = {
  "title": "Wisconsin State Hex Grid - Mapping 2016 Presidential Results",
  "author": "",
  "date": "2017-11-16",
  "categories": "posts",
  "tags": ["dataviz", "ggplot2", "hexmapr", "R"],
  "featured": false,
  "description": "Use the hexmapr package to map the Wisconsin 2016 Presidential Results",
  "img": "/img/wiHexPlot.png"
};
const {
  title,
  author,
  date,
  categories,
  tags,
  featured,
  description,
  img
} = metadata;
function _017_11_16_wi_presidential_results_using_hexmapr_md($$payload) {
  $$payload.out += `<blockquote><p>NOTE: find this package here:</p> <a href="https://github.com/hafen/hexmapr" class="uri">https://github.com/hafen/hexmapr</a> with \`devtools::install_github("hafen/hexmapr")\`</blockquote> <h2>NEAT PACKAGE ALERT!</h2> <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">My 1st R package! <a href="https://t.co/dI3GJbC7FQ">https://t.co/dI3GJbC7FQ</a> Automatically turn geospatial polygons like states into
regular/hexagonal grids <a href="https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw">\\#rstats</a> <a href="https://twitter.com/hashtag/ggplot2?src=hash&amp;ref_src=twsrc%5Etfw">\\#ggplot2</a> <a href="https://t.co/dxvYCZWJzU">pic.twitter.com/dxvYCZWJzU</a></p><p>— J Bailey (@iammrbailey)</p> <a href="https://twitter.com/iammrbailey/status/925346870381240320?ref_src=twsrc%5Etfw">October
31, 2017</a></blockquote> <p>I’ve been thinking about implementing something like this for a while -
got excited by this tweet I thought I would do some exploring and write
out a post over the weekend. Creating a county-level hex grid of
Wisconsin makes for a perfect supplment to my earlier post about <a href="https://www.mikelee.co/posts/2016-12-26-wisconsin-presidential-election-results/" rel="nofollow">mapping the 2016 Wisconsin presidential
results</a>.</p> <hr/> <h2>Let’s make a hex grid of Wisconsin</h2> <p>The first thing we’ll do is retrieve a Wisconsin shapefile; we can use
the <code>tigris</code> package developed by Kyle Walker to pull a 2010 census
shapefile of Wisconsin counties:</p> <pre class="language-r">${html(`<code class="language-r">library<span class="token punctuation">(</span>tigris<span class="token punctuation">)</span>
wi <span class="token operator">&lt;-</span> counties<span class="token punctuation">(</span><span class="token string">"Wisconsin"</span><span class="token punctuation">,</span> cb <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">)</span>
wi_original <span class="token operator">&lt;-</span> wi
plot<span class="token punctuation">(</span>wi<span class="token punctuation">)</span></code>`)}</pre> <p><img src="/img/tigrisshapefile-1.png" alt="WI tigris shapefile"/></p> <p>We’ll then port some code from the <code>hexmapr</code> github README:</p> <pre class="language-r">${html(`<code class="language-r">devtools<span class="token operator">::</span>install_github<span class="token punctuation">(</span><span class="token string">"sassalley/hexmapr"</span><span class="token punctuation">)</span>
library<span class="token punctuation">(</span>hexmapr<span class="token punctuation">)</span>
wi_details <span class="token operator">&lt;-</span> hexmapr<span class="token operator">::</span>get_shape_details<span class="token punctuation">(</span>wi<span class="token punctuation">)</span>
wi<span class="token operator">@</span>data<span class="token operator">$</span>xcentroid <span class="token operator">&lt;-</span> coordinates<span class="token punctuation">(</span>wi<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
wi<span class="token operator">@</span>data<span class="token operator">$</span>ycentroid <span class="token operator">&lt;-</span> coordinates<span class="token punctuation">(</span>wi<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span></code>`)}</pre> <p>We’re going for the closest shapefile match, preferring a final shape
than looks like the outline of the state than one with appropriate
placement of counties - there is rarely a perfect grid match. So let’s
test a whole bunch:</p> <pre class="language-r">${html(`<code class="language-r"><span class="token comment"># hexagon - red border for the 28th seed</span>
png<span class="token punctuation">(</span>file <span class="token operator">=</span> <span class="token string">"/home/michael/Documents/mikeleeco.github.com/static/img/hexGridWisconsin.png"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">700</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">)</span>
par<span class="token punctuation">(</span>mfrow<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mar <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  new_cells <span class="token operator">&lt;-</span>  calculate_cell_size<span class="token punctuation">(</span>wi<span class="token punctuation">,</span> wi_details<span class="token punctuation">,</span><span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token string">'hexagonal'</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">28</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    plot<span class="token punctuation">(</span>new_cells<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> main <span class="token operator">=</span> paste<span class="token punctuation">(</span><span class="token string">"Seed"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">,</span> border <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    plot<span class="token punctuation">(</span>new_cells<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> main <span class="token operator">=</span> paste<span class="token punctuation">(</span><span class="token string">"Seed"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment"># squares - red border for the 7th seed</span>
png<span class="token punctuation">(</span>file <span class="token operator">=</span> <span class="token string">"/home/michael/Documents/mikeleeco.github.com/static/img/squareGridWisconsin.png"</span><span class="token punctuation">,</span> width <span class="token operator">=</span> <span class="token number">700</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">)</span>
par<span class="token punctuation">(</span>mfrow<span class="token operator">=</span>c<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mar <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  new_cells <span class="token operator">&lt;-</span>  calculate_cell_size<span class="token punctuation">(</span>wi<span class="token punctuation">,</span> wi_details<span class="token punctuation">,</span><span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token string">'regular'</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    plot<span class="token punctuation">(</span>new_cells<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> main <span class="token operator">=</span> paste<span class="token punctuation">(</span><span class="token string">"Seed"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">,</span> border <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    plot<span class="token punctuation">(</span>new_cells<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> main <span class="token operator">=</span> paste<span class="token punctuation">(</span><span class="token string">"Seed"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`)}</pre> <p><img src="/img/hexGridWisconsin.png" alt="hex grid options"/></p> <p><img src="/img/squareGridWisconsin.png" alt="square grid options"/></p> <p>I like the look of the 28th hexagon grid, and the 7th square grid. Let’s
take those and assign the polygons to a new <code>SpatialPolygonsDataFrame</code>,
then fortify .</p> <pre class="language-r">${html(`<code class="language-r">library<span class="token punctuation">(</span>dplyr<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>ggplot2<span class="token punctuation">)</span>
clean <span class="token operator">&lt;-</span> <span class="token keyword">function</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  shape<span class="token operator">@</span>data<span class="token operator">$</span>id <span class="token operator">=</span> rownames<span class="token punctuation">(</span>shape<span class="token operator">@</span>data<span class="token punctuation">)</span>
  shape.points <span class="token operator">=</span> fortify<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> region<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">)</span>
  shape.df <span class="token operator">=</span> left_join<span class="token punctuation">(</span>shape.points<span class="token punctuation">,</span> shape<span class="token operator">@</span>data<span class="token punctuation">,</span> by<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span>

new_cells_hex <span class="token operator">&lt;-</span>  calculate_cell_size<span class="token punctuation">(</span>wi_original<span class="token punctuation">,</span> wi_details<span class="token punctuation">,</span><span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token string">'hexagonal'</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span>
resulthex <span class="token operator">&lt;-</span> assign_polygons<span class="token punctuation">(</span>wi_original<span class="token punctuation">,</span>new_cells_hex<span class="token punctuation">)</span>
result_df_hex <span class="token operator">&lt;-</span> clean<span class="token punctuation">(</span>resulthex<span class="token punctuation">)</span>

new_cells_square <span class="token operator">&lt;-</span>  calculate_cell_size<span class="token punctuation">(</span>wi_original<span class="token punctuation">,</span> wi_details<span class="token punctuation">,</span><span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token string">'regular'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
resultsquare <span class="token operator">&lt;-</span> assign_polygons<span class="token punctuation">(</span>wi_original<span class="token punctuation">,</span>new_cells_square<span class="token punctuation">)</span>
result_df_square <span class="token operator">&lt;-</span> clean<span class="token punctuation">(</span>resultsquare<span class="token punctuation">)</span></code>`)}</pre> <p>Now that we’ve got our modified <code>SpatialPolygonsDataFrame</code>s - covered to a dataframe for use with ggplot2 - we can plot the result using <code>geom_polygon</code>:</p> <pre class="language-r">${html(`<code class="language-r">library<span class="token punctuation">(</span>viridis<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>extrafont<span class="token punctuation">)</span>
loadfonts<span class="token punctuation">(</span><span class="token punctuation">)</span>
theme_open_sans <span class="token operator">&lt;-</span> theme<span class="token punctuation">(</span>text<span class="token operator">=</span>element_text<span class="token punctuation">(</span>family<span class="token operator">=</span><span class="token string">"Open Sans"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plot.title <span class="token operator">=</span> element_text<span class="token punctuation">(</span>family <span class="token operator">=</span> <span class="token string">"Open Sans Semibold"</span><span class="token punctuation">,</span> size <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plot.subtitle <span class="token operator">=</span> element_text<span class="token punctuation">(</span>family <span class="token operator">=</span> <span class="token string">"Open Sans Light"</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span> legend.title <span class="token operator">=</span> element_text<span class="token punctuation">(</span>family<span class="token operator">=</span><span class="token string">"Open Sans Semibold"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
hexplot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>result_df_hex<span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>long<span class="token punctuation">,</span> y<span class="token operator">=</span>lat<span class="token punctuation">,</span> fill <span class="token operator">=</span> as.numeric<span class="token punctuation">(</span>ALAND<span class="token punctuation">)</span><span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>V1<span class="token punctuation">,</span> V2<span class="token punctuation">,</span> label <span class="token operator">=</span> NAME<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span> family <span class="token operator">=</span> <span class="token string">"Open Sans"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_viridis<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  guides<span class="token punctuation">(</span>fill<span class="token operator">=</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme_void<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> theme_open_sans

hexplot</code>`)}</pre> <p><img src="/img/hexWI.png" alt="Wisconsin Hex Grid Map by County by ALAND"/></p> <pre class="language-r">${html(`<code class="language-r">squareplot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>result_df_square<span class="token punctuation">)</span> <span class="token operator">+</span>
  geom_polygon<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>long<span class="token punctuation">,</span> y<span class="token operator">=</span>lat<span class="token punctuation">,</span> fill <span class="token operator">=</span> as.numeric<span class="token punctuation">(</span>ALAND<span class="token punctuation">)</span><span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>
  geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>V1<span class="token punctuation">,</span> V2<span class="token punctuation">,</span> label <span class="token operator">=</span> NAME<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span> family <span class="token operator">=</span> <span class="token string">"Open Sans"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  scale_fill_viridis<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  guides<span class="token punctuation">(</span>fill<span class="token operator">=</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  theme_void<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> theme_open_sans

squareplot</code>`)}</pre> <p><img src="/img/squareWI.png" alt="Wisconsin Square Grid Map by County by ALAND"/></p> <p>I saw on twitter that <code>sf</code> can now be used natively, so I gave that I try as well. First convert the <code>SpatialPolygonsDataFrame</code> to a simple feature (<code>sf</code>), then plot the resultant object using <code>geom_sf</code>:</p> <pre class="language-r">${html(`<code class="language-r">sfResultSquare <span class="token operator">&lt;-</span> st_as_sf<span class="token punctuation">(</span>resultsquare<span class="token punctuation">)</span>
sfResultHex <span class="token operator">&lt;-</span> st_as_sf<span class="token punctuation">(</span>resulthex<span class="token punctuation">)</span>
class<span class="token punctuation">(</span>sfResultHex<span class="token punctuation">)</span>
sfHexPlot <span class="token operator">&lt;-</span>ggplot<span class="token punctuation">(</span>sfResultHex<span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_sf<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>fill <span class="token operator">=</span> as.numeric<span class="token punctuation">(</span>ALAND<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"transparent"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>V1<span class="token punctuation">,</span> V2<span class="token punctuation">,</span> label <span class="token operator">=</span> NAME<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"white"</span><span class="token punctuation">,</span> family <span class="token operator">=</span> <span class="token string">"Open Sans"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_fill_viridis<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    guides<span class="token punctuation">(</span>fill<span class="token operator">=</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    theme<span class="token punctuation">(</span>panel.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token keyword">NA</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.text <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.ticks <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.title <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

sfHexPlot</code>`)}</pre> <p><img src="/img/hexgridwithsf-1.png" alt="Wisconsin Square Grid Map by County by ALAND using geom_sf"/></p> <p>Cool to know that’s possible! Let’s use some more novel data than land area. Building off of a previous post mapping Wisconsin presidential election results, let’s map vote totals to our new gridmaps.</p> <pre class="language-r">${html(`<code class="language-r">library<span class="token punctuation">(</span>stringr<span class="token punctuation">)</span>
library<span class="token punctuation">(</span>tidyr<span class="token punctuation">)</span>
all_results <span class="token operator">&lt;-</span> read.csv<span class="token punctuation">(</span><span class="token string">"https://raw.githubusercontent.com/mkearney/presidential_election_county_results_2016/master/pres16results.csv"</span><span class="token punctuation">,</span> stringsAsFactors <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span>

wisconsin <span class="token operator">&lt;-</span> all_results <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>str_detect<span class="token punctuation">(</span>fips<span class="token punctuation">,</span> <span class="token string">"^55"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

wisconsin_spread <span class="token operator">&lt;-</span> wisconsin <span class="token percent-operator operator">%>%</span>
  filter<span class="token punctuation">(</span>cand <span class="token percent-operator operator">%in%</span> c<span class="token punctuation">(</span><span class="token string">"Donald Trump"</span><span class="token punctuation">,</span> <span class="token string">"Hillary Clinton"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  select<span class="token punctuation">(</span>fips<span class="token punctuation">,</span> cand<span class="token punctuation">,</span> votes<span class="token punctuation">,</span> total_votes<span class="token punctuation">)</span> <span class="token percent-operator operator">%>%</span>
  spread<span class="token punctuation">(</span>cand<span class="token punctuation">,</span> votes<span class="token punctuation">)</span>

wisconsin_spread <span class="token operator">&lt;-</span> wisconsin_spread <span class="token percent-operator operator">%>%</span> mutate<span class="token punctuation">(</span>voteDiff <span class="token operator">=</span> &#96;Donald Trump&#96; <span class="token operator">-</span> &#96;Hillary Clinton&#96;<span class="token punctuation">,</span>
                                                pctDiff <span class="token operator">=</span> &#96;Donald Trump&#96;<span class="token operator">/</span>total_votes <span class="token operator">-</span> &#96;Hillary Clinton&#96;<span class="token operator">/</span>total_votes<span class="token punctuation">,</span>
                                                weight <span class="token operator">=</span> total_votes<span class="token operator">/</span> sum<span class="token punctuation">(</span>total_votes<span class="token punctuation">)</span><span class="token punctuation">)</span>
wisconsin_spread<span class="token operator">$</span>weight <span class="token operator">&lt;-</span> ifelse<span class="token punctuation">(</span>wisconsin_spread<span class="token operator">$</span>pctDiff <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token operator">-</span>wisconsin_spread<span class="token operator">$</span>weight<span class="token punctuation">,</span> wisconsin_spread<span class="token operator">$</span>weight<span class="token punctuation">)</span></code>`)}</pre> <p>We can create some custom breaks to give counties with higher vote totals more prominence in the figure, then merge these onto our hex and square <code>SpatialPolygonsDataFrame</code>:</p> <pre class="language-r">${html(`<code class="language-r">wisconsin_spread<span class="token operator">$</span>breaks <span class="token operator">&lt;-</span> cut<span class="token punctuation">(</span>wisconsin_spread<span class="token operator">$</span>weight<span class="token punctuation">,</span>
                               breaks <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">.1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">.05</span><span class="token punctuation">,</span> <span class="token number">.1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                               labels <span class="token operator">=</span> c<span class="token punctuation">(</span><span class="token string">"R   More than 10 Percent"</span><span class="token punctuation">,</span> <span class="token string">"R   5 to 10 Percent"</span><span class="token punctuation">,</span> <span class="token string">"R   1 to 5 Percent"</span><span class="token punctuation">,</span> <span class="token string">"R   Less than 1 Percent"</span><span class="token punctuation">,</span>
                                          <span class="token string">"D   Less than 1 Percent"</span><span class="token punctuation">,</span><span class="token string">"D   1 to 5 Percent"</span><span class="token punctuation">,</span> <span class="token string">"D   5 to 10 Percent"</span><span class="token punctuation">,</span> <span class="token string">"D   More than 10 Percent"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
wiHex <span class="token operator">&lt;-</span> merge<span class="token punctuation">(</span>result_df_hex<span class="token punctuation">,</span> wisconsin_spread<span class="token punctuation">,</span> by.x <span class="token operator">=</span> <span class="token string">"GEOID"</span><span class="token punctuation">,</span> by.y <span class="token operator">=</span> <span class="token string">"fips"</span><span class="token punctuation">)</span>
wiSquare <span class="token operator">&lt;-</span> merge<span class="token punctuation">(</span>result_df_square<span class="token punctuation">,</span> wisconsin_spread<span class="token punctuation">,</span> by.x <span class="token operator">=</span> <span class="token string">"GEOID"</span><span class="token punctuation">,</span> by.y <span class="token operator">=</span> <span class="token string">"fips"</span><span class="token punctuation">)</span></code>`)}</pre> <p>Once we’ve got our data sets finalized, figures are created usng <code>geom_polygon</code>:</p> <pre class="language-r">${html(`<code class="language-r">library<span class="token punctuation">(</span>RColorBrewer<span class="token punctuation">)</span>

wiHexPlot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>wiHex<span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_polygon<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>long<span class="token punctuation">,</span> y<span class="token operator">=</span>lat<span class="token punctuation">,</span> fill<span class="token operator">=</span>breaks<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">)</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"#f5f5f5"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>V1<span class="token punctuation">,</span> V2<span class="token punctuation">,</span> label <span class="token operator">=</span> NAME<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span> family <span class="token operator">=</span> <span class="token string">"Open Sans"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_fill_manual<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"Portion of WI Vote"</span><span class="token punctuation">,</span> values <span class="token operator">=</span> brewer.pal<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"RdBu"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> drop <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    guides<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    ggtitle<span class="token punctuation">(</span>label <span class="token operator">=</span> <span class="token string">"2016 Presidential Results by Wisconsin Counties"</span><span class="token punctuation">,</span> subtitle <span class="token operator">=</span> <span class="token string">"59 of 72 Wisconsin counties leaned Republican, while the only two counties with&#92;nmore than 10 percent of the state's votes totaled more Democratic votes"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    theme<span class="token punctuation">(</span>panel.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token keyword">NA</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.text <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.ticks <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.title <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    theme_open_sans

wiHexPlot</code>`)}</pre> <p><img src="/img/hexWIVoteCount.png" alt="Wisconsin Hex Grid Map by County by Vote Count"/></p> <pre class="language-r">${html(`<code class="language-r">wiSquarePlot <span class="token operator">&lt;-</span> ggplot<span class="token punctuation">(</span>wiSquare<span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_polygon<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>x<span class="token operator">=</span>long<span class="token punctuation">,</span> y<span class="token operator">=</span>lat<span class="token punctuation">,</span> fill<span class="token operator">=</span>breaks<span class="token punctuation">,</span> group <span class="token operator">=</span> group<span class="token punctuation">)</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"#f5f5f5"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    geom_text<span class="token punctuation">(</span>aes<span class="token punctuation">(</span>V1<span class="token punctuation">,</span> V2<span class="token punctuation">,</span> label <span class="token operator">=</span> NAME<span class="token punctuation">)</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">"black"</span><span class="token punctuation">,</span> family <span class="token operator">=</span> <span class="token string">"Open Sans"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    scale_fill_manual<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"Percentage of WI Vote Total"</span><span class="token punctuation">,</span> values <span class="token operator">=</span> brewer.pal<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">"RdBu"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> drop <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    guides<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    ggtitle<span class="token punctuation">(</span>label <span class="token operator">=</span> <span class="token string">"2016 Presidential Results by Wisconsin Counties"</span><span class="token punctuation">,</span> subtitle <span class="token operator">=</span> <span class="token string">"59 of 72 Wisconsin counties leaned Republican, while the only two counties with&#92;nmore than 10 percent of the state's votes totaled more Democratic votes"</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    theme<span class="token punctuation">(</span>panel.background <span class="token operator">=</span> element_rect<span class="token punctuation">(</span>fill <span class="token operator">=</span> <span class="token keyword">NA</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.text <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.ticks <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis.title <span class="token operator">=</span> element_blank<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
    theme_open_sans

wiSquarePlot</code>`)}</pre> <p><img src="/img/squareWIVoteCount.png" alt="Wisconsin Square Grid Map by County by Vote Count"/></p> <hr/>`;
}
export {
  _017_11_16_wi_presidential_results_using_hexmapr_md as default,
  metadata
};
